# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Intel Corporation
# This file is distributed under the same license as the oneTBB package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: oneTBB \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-23 14:08+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:4
msgid "Migrating from tbb::task_scheduler_init"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:6
msgid ""
"``tbb::task_scheduler_init`` was a multipurpose functionality in the "
"previous versions of Threading Building Blocks (TBB). This section "
"considers different use cases and how they can be covered with oneTBB."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:11
msgid "Managing the number of threads"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:14
msgid "Querying the default number of threads"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:16
msgid ""
"`oneapi::tbb::info::default_concurrency() "
"<https://spec.oneapi.com/versions/latest/elements/oneTBB/source/info_namespace.html>`_"
" returns the maximum concurrency that will be created by *default* in "
"implicit or explicit ``task_arena``."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:20
msgid ""
"`oneapi::tbb::this_task_arena::max_concurrency() "
"<https://spec.oneapi.com/versions/latest/elements/oneTBB/source/task_scheduler/task_arena/this_task_arena_ns.html>`_"
" returns the maximum number of threads available for the parallel "
"algorithms within the current context (or *default* if an implicit arena "
"is not initialized)"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:25
msgid ""
"`oneapi::tbb::global_control::active_value(tbb::global_control::max_allowed_parallelism)"
" "
"<https://spec.oneapi.com/versions/latest/elements/oneTBB/source/task_scheduler/scheduling_controls/global_control_cls.html>`_"
" returns the current limit of the thread pool (or *default* if oneTBB "
"scheduler is not initialized)"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:30
msgid "Setting the maximum concurrency"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:32
msgid ""
"`task_arena(/* max_concurrency */) "
"<https://spec.oneapi.com/versions/latest/elements/oneTBB/source/task_scheduler/task_arena/this_task_arena_ns.html>`_"
" limits the maximum concurrency of the parallel algorithm running inside "
"``task_arena``"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:36
msgid ""
"`tbb::global_control(tbb::global_control::max_allowed_parallelism, /* "
"max_concurrency */) "
"<https://spec.oneapi.com/versions/latest/elements/oneTBB/source/task_scheduler/scheduling_controls/global_control_cls.html>`_"
" limits the total number of oneTBB worker threads"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:41
msgid "Examples"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:43
msgid "The default parallelism:"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:45
msgid ""
"#include <oneapi/tbb/info.h>\n"
"#include <oneapi/tbb/parallel_for.h>\n"
"#include <oneapi/tbb/task_arena.h>\n"
"#include <cassert>\n"
"\n"
"int main() {\n"
"    // Get the default number of threads\n"
"    int num_threads = oneapi::tbb::info::default_concurrency();\n"
"\n"
"    // Run the default parallelism\n"
"    oneapi::tbb::parallel_for( /* ... */ [] {\n"
"        // Assert the maximum number of threads\n"
"        assert(num_threads == "
"oneapi::tbb::this_task_arena::max_concurrency());\n"
"    });\n"
"\n"
"    // Create the default task_arena\n"
"    oneapi::tbb::task_arena arena;\n"
"    arena.execute([]{\n"
"        oneapi::tbb::parallel_for( /* ... */ [] {\n"
"            // Assert the maximum number of threads\n"
"            assert(num_threads == "
"oneapi::tbb::this_task_arena::max_concurrency());\n"
"        });\n"
"    });\n"
"\n"
"    return 0;\n"
"}"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:74
msgid "The limited parallelism:"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:76
msgid ""
"#include <oneapi/tbb/info.h>\n"
"#include <oneapi/tbb/parallel_for.h>\n"
"#include <oneapi/tbb/task_arena.h>\n"
"#include <oneapi/tbb/global_control.h>\n"
"#include <cassert>\n"
"\n"
"int main() {\n"
"    // Create the custom task_arena with four threads\n"
"    oneapi::tbb::task_arena arena(4);\n"
"    arena.execute([]{\n"
"        oneapi::tbb::parallel_for( /* ... */ [] {\n"
"            // This arena is limited with for threads\n"
"            assert(oneapi::tbb::this_task_arena::max_concurrency() == 4);"
"\n"
"        });\n"
"    });\n"
"\n"
"    // Limit the number of threads to two for all oneTBB parallel "
"interfaces\n"
"    oneapi::tbb::global_control "
"global_limit(oneapi::tbb::global_control::max_allowed_parallelism, 2);\n"
"\n"
"    // the default parallelism\n"
"    oneapi::tbb::parallel_for( /* ... */ [] {\n"
"        // No more than two threads is expected; however, "
"tbb::this_task_arena::max_concurrency() can return a bigger value\n"
"        int thread_limit = "
"oneapi::tbb::global_control::active_value(oneapi::tbb::global_control::max_allowed_parallelism);"
"\n"
"        assert(thread_limit == 2);\n"
"    });\n"
"\n"
"    arena.execute([]{\n"
"        oneapi::tbb::parallel_for( /* ... */ [] {\n"
"            // No more than two threads is expected; however, "
"tbb::this_task_arena::max_concurrency() is four\n"
"            int thread_limit = "
"oneapi::tbb::global_control::active_value(oneapi::tbb::global_control::max_allowed_parallelism);"
"\n"
"            assert(thread_limit == 2);\n"
"            assert(tbb::this_task_arena::max_concurrency() == 4);\n"
"        });\n"
"    });\n"
"\n"
"    return 0;\n"
"}"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:117
msgid "Setting thread stack size"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:118
msgid ""
"Use "
"`oneapi::tbb::global_control(oneapi::tbb::global_control::thread_stack_size,"
" /* stack_size */) "
"<https://spec.oneapi.com/versions/latest/elements/oneTBB/source/task_scheduler/scheduling_controls/global_control_cls.html>`_"
" to set the stack size for oneTBB worker threads:"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:122
msgid ""
"#include <oneapi/tbb/parallel_for.h>\n"
"#include <oneapi/tbb/global_control.h>\n"
"\n"
"int main() {\n"
"    // Set 16 MB of the stack size for oneTBB worker threads.\n"
"    // Note that the stack size of the main thread should be configured "
"in accordace with the\n"
"    // system documentation, e.g. at application startup moment\n"
"    oneapi::tbb::global_control "
"global_limit(tbb::global_control::thread_stack_size, 16 * 1024 * 1024);\n"
"\n"
"    oneapi::tbb::parallel_for( /* ... */ [] {\n"
"        // Create a big array in the stack\n"
"        char big_array[10*1024*1024];\n"
"    });\n"
"\n"
"    return 0;\n"
"}"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:142
msgid "Terminating oneTBB scheduler"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:143
msgid ""
":ref:`task_scheduler_handle_reference` allows waiting for oneTBB worker "
"threads completion:"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:146
msgid ""
"#include <oneapi/tbb/global_control.h>\n"
"#include <oneapi/tbb/parallel_for.h>\n"
"\n"
"int main() {\n"
"    oneapi::tbb::task_scheduler_handle handle{tbb::attach{}};\n"
"    // Do some parallel work here\n"
"    oneapi::tbb::parallel_for(/* ... */);\n"
"    oneapi::tbb::finalize(handle);\n"
"    return 0;\n"
"}"
msgstr ""

