# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Intel Corporation
# This file is distributed under the same license as the oneTBB package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: oneTBB\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-23 14:08+0300\n"
"PO-Revision-Date: 2022-02-24 14:55+0300\n"
"Last-Translator: Evgeny <schmidte@list.ru>\n"
"Language-Team: \n"
"Language: ru_RU\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : 2);\n"
"Generated-By: Babel 2.9.1\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:4
msgid "Migrating from tbb::task_scheduler_init"
msgstr "Переход от tbb::task_scheduler_init"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:6
msgid "``tbb::task_scheduler_init`` was a multipurpose functionality in the previous versions of Threading Building Blocks (TBB). This section considers different use cases and how they can be covered with oneTBB."
msgstr "``tbb::task_scheduler_init`` был многоцелевой функциональностью в предыдущих версиях Threading Building Blocks (TBB). В этом разделе рассматриваются различные случаи использования и то, как они могут быть охвачены с помощью oneTBB."

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:11
msgid "Managing the number of threads"
msgstr "Управление количеством потоков"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:14
msgid "Querying the default number of threads"
msgstr "Запрос количества нитей по умолчанию"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:16
msgid "`oneapi::tbb::info::default_concurrency() <https://spec.oneapi.com/versions/latest/elements/oneTBB/source/info_namespace.html>`_ returns the maximum concurrency that will be created by *default* in implicit or explicit ``task_arena``."
msgstr "`oneapi::tbb::info::default_concurrency() <https://spec.oneapi.com/versions/latest/elements/oneTBB/source/info_namespace.html>`_ возвращает максимальный параллелизм, который будет создан *по умолчанию* в неявной или явной ``task_arena``."

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:20
msgid "`oneapi::tbb::this_task_arena::max_concurrency() <https://spec.oneapi.com/versions/latest/elements/oneTBB/source/task_scheduler/task_arena/this_task_arena_ns.html>`_ returns the maximum number of threads available for the parallel algorithms within the current context (or *default* if an implicit arena is not initialized)"
msgstr "`oneapi::tbb::this_task_arena::max_concurrency() <https://spec.oneapi.com/versions/latest/elements/oneTBB/source/task_scheduler/task_arena/this_task_arena_ns.html>`_ возвращает максимальное количество потоков, доступных для параллельных алгоритмов в рамках текущего контекста (или *по умолчанию*, если неявная арена не инициализирована)"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:25
msgid "`oneapi::tbb::global_control::active_value(tbb::global_control::max_allowed_parallelism) <https://spec.oneapi.com/versions/latest/elements/oneTBB/source/task_scheduler/scheduling_controls/global_control_cls.html>`_ returns the current limit of the thread pool (or *default* if oneTBB scheduler is not initialized)"
msgstr "`oneapi::tbb::global_control::active_value(tbb::global_control::max_allowed_parallelism) <https://spec.oneapi.com/versions/latest/elements/oneTBB/source/task_scheduler/scheduling_controls/global_control_cls.html>`_ возвращает текущий предел пула потоков (или *по умолчанию*, если планировщик oneTBB не инициализирован)"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:30
msgid "Setting the maximum concurrency"
msgstr "Установка максимального параллелизма"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:32
msgid "`task_arena(/* max_concurrency */) <https://spec.oneapi.com/versions/latest/elements/oneTBB/source/task_scheduler/task_arena/this_task_arena_ns.html>`_ limits the maximum concurrency of the parallel algorithm running inside ``task_arena``"
msgstr "`task_arena(/* max_concurrency */) <https://spec.oneapi.com/versions/latest/elements/oneTBB/source/task_scheduler/task_arena/this_task_arena_ns.html>`_ ограничивает максимальный параллельный параллельный алгоритм, запущенный внутри ``task_arena``"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:36
msgid "`tbb::global_control(tbb::global_control::max_allowed_parallelism, /* max_concurrency */) <https://spec.oneapi.com/versions/latest/elements/oneTBB/source/task_scheduler/scheduling_controls/global_control_cls.html>`_ limits the total number of oneTBB worker threads"
msgstr "`tbb::global_control(tbb::global_control::max_allowed_parallelism, /* max_concurrency */) <https://spec.oneapi.com/versions/latest/elements/oneTBB/source/task_scheduler/scheduling_controls/global_control_cls.html>`_ ограничивает общее количество рабочих потоков OneTBB"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:41
msgid "Examples"
msgstr "Примеры"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:43
msgid "The default parallelism:"
msgstr "Параллелизм по умолчанию:"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:45
msgid ""
"#include <oneapi/tbb/info.h>\n"
"#include <oneapi/tbb/parallel_for.h>\n"
"#include <oneapi/tbb/task_arena.h>\n"
"#include <cassert>\n"
"\n"
"int main() {\n"
"    // Get the default number of threads\n"
"    int num_threads = oneapi::tbb::info::default_concurrency();\n"
"\n"
"    // Run the default parallelism\n"
"    oneapi::tbb::parallel_for( /* ... */ [] {\n"
"        // Assert the maximum number of threads\n"
"        assert(num_threads == oneapi::tbb::this_task_arena::max_concurrency());\n"
"    });\n"
"\n"
"    // Create the default task_arena\n"
"    oneapi::tbb::task_arena arena;\n"
"    arena.execute([]{\n"
"        oneapi::tbb::parallel_for( /* ... */ [] {\n"
"            // Assert the maximum number of threads\n"
"            assert(num_threads == oneapi::tbb::this_task_arena::max_concurrency());\n"
"        });\n"
"    });\n"
"\n"
"    return 0;\n"
"}"
msgstr ""
"#include <oneapi/tbb/info.h>\n"
"#include <oneapi/tbb/parallel_for.h>\n"
"#include <oneapi/tbb/task_arena.h>\n"
"#include <cassert>\n"
"\n"
"int main() {\n"
"    // Get the default number of threads\n"
"    int num_threads = oneapi::tbb::info::default_concurrency();\n"
"\n"
"    // Run the default parallelism\n"
"    oneapi::tbb::parallel_for( /* ... */ [] {\n"
"        // Assert the maximum number of threads\n"
"        assert(num_threads == oneapi::tbb::this_task_arena::max_concurrency());\n"
"    });\n"
"\n"
"    // Create the default task_arena\n"
"    oneapi::tbb::task_arena arena;\n"
"    arena.execute([]{\n"
"        oneapi::tbb::parallel_for( /* ... */ [] {\n"
"            // Assert the maximum number of threads\n"
"            assert(num_threads == oneapi::tbb::this_task_arena::max_concurrency());\n"
"        });\n"
"    });\n"
"\n"
"    return 0;\n"
"}"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:74
msgid "The limited parallelism:"
msgstr "Ограниченный параллелизм:"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:76
msgid ""
"#include <oneapi/tbb/info.h>\n"
"#include <oneapi/tbb/parallel_for.h>\n"
"#include <oneapi/tbb/task_arena.h>\n"
"#include <oneapi/tbb/global_control.h>\n"
"#include <cassert>\n"
"\n"
"int main() {\n"
"    // Create the custom task_arena with four threads\n"
"    oneapi::tbb::task_arena arena(4);\n"
"    arena.execute([]{\n"
"        oneapi::tbb::parallel_for( /* ... */ [] {\n"
"            // This arena is limited with for threads\n"
"            assert(oneapi::tbb::this_task_arena::max_concurrency() == 4);\n"
"        });\n"
"    });\n"
"\n"
"    // Limit the number of threads to two for all oneTBB parallel interfaces\n"
"    oneapi::tbb::global_control global_limit(oneapi::tbb::global_control::max_allowed_parallelism, 2);\n"
"\n"
"    // the default parallelism\n"
"    oneapi::tbb::parallel_for( /* ... */ [] {\n"
"        // No more than two threads is expected; however, tbb::this_task_arena::max_concurrency() can return a bigger value\n"
"        int thread_limit = oneapi::tbb::global_control::active_value(oneapi::tbb::global_control::max_allowed_parallelism);\n"
"        assert(thread_limit == 2);\n"
"    });\n"
"\n"
"    arena.execute([]{\n"
"        oneapi::tbb::parallel_for( /* ... */ [] {\n"
"            // No more than two threads is expected; however, tbb::this_task_arena::max_concurrency() is four\n"
"            int thread_limit = oneapi::tbb::global_control::active_value(oneapi::tbb::global_control::max_allowed_parallelism);\n"
"            assert(thread_limit == 2);\n"
"            assert(tbb::this_task_arena::max_concurrency() == 4);\n"
"        });\n"
"    });\n"
"\n"
"    return 0;\n"
"}"
msgstr ""
"#include <oneapi/tbb/info.h>\n"
"#include <oneapi/tbb/parallel_for.h>\n"
"#include <oneapi/tbb/task_arena.h>\n"
"#include <oneapi/tbb/global_control.h>\n"
"#include <cassert>\n"
"\n"
"int main() {\n"
"    // Create the custom task_arena with four threads\n"
"    oneapi::tbb::task_arena arena(4);\n"
"    arena.execute([]{\n"
"        oneapi::tbb::parallel_for( /* ... */ [] {\n"
"            // This arena is limited with for threads\n"
"            assert(oneapi::tbb::this_task_arena::max_concurrency() == 4);\n"
"        });\n"
"    });\n"
"\n"
"    // Limit the number of threads to two for all oneTBB parallel interfaces\n"
"    oneapi::tbb::global_control global_limit(oneapi::tbb::global_control::max_allowed_parallelism, 2);\n"
"\n"
"    // the default parallelism\n"
"    oneapi::tbb::parallel_for( /* ... */ [] {\n"
"        // No more than two threads is expected; however, tbb::this_task_arena::max_concurrency() can return a bigger value\n"
"        int thread_limit = oneapi::tbb::global_control::active_value(oneapi::tbb::global_control::max_allowed_parallelism);\n"
"        assert(thread_limit == 2);\n"
"    });\n"
"\n"
"    arena.execute([]{\n"
"        oneapi::tbb::parallel_for( /* ... */ [] {\n"
"            // No more than two threads is expected; however, tbb::this_task_arena::max_concurrency() is four\n"
"            int thread_limit = oneapi::tbb::global_control::active_value(oneapi::tbb::global_control::max_allowed_parallelism);\n"
"            assert(thread_limit == 2);\n"
"            assert(tbb::this_task_arena::max_concurrency() == 4);\n"
"        });\n"
"    });\n"
"\n"
"    return 0;\n"
"}"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:117
msgid "Setting thread stack size"
msgstr "Установка размера стека нитей"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:118
msgid "Use `oneapi::tbb::global_control(oneapi::tbb::global_control::thread_stack_size, /* stack_size */) <https://spec.oneapi.com/versions/latest/elements/oneTBB/source/task_scheduler/scheduling_controls/global_control_cls.html>`_ to set the stack size for oneTBB worker threads:"
msgstr "Используй `oneapi::tbb::global_control(oneapi::tbb::global_control::thread_stack_size, /* stack_size */) <https://spec.oneapi.com/versions/latest/elements/oneTBB/source/task_scheduler/scheduling_controls/global_control_cls.html>`_ для установки размера стека для рабочих потоков oneTBB:"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:122
msgid ""
"#include <oneapi/tbb/parallel_for.h>\n"
"#include <oneapi/tbb/global_control.h>\n"
"\n"
"int main() {\n"
"    // Set 16 MB of the stack size for oneTBB worker threads.\n"
"    // Note that the stack size of the main thread should be configured in accordace with the\n"
"    // system documentation, e.g. at application startup moment\n"
"    oneapi::tbb::global_control global_limit(tbb::global_control::thread_stack_size, 16 * 1024 * 1024);\n"
"\n"
"    oneapi::tbb::parallel_for( /* ... */ [] {\n"
"        // Create a big array in the stack\n"
"        char big_array[10*1024*1024];\n"
"    });\n"
"\n"
"    return 0;\n"
"}"
msgstr ""
"#include <oneapi/tbb/parallel_for.h>\n"
"#include <oneapi/tbb/global_control.h>\n"
"\n"
"int main() {\n"
"    // Set 16 MB of the stack size for oneTBB worker threads.\n"
"    // Note that the stack size of the main thread should be configured in accordace with the\n"
"    // system documentation, e.g. at application startup moment\n"
"    oneapi::tbb::global_control global_limit(tbb::global_control::thread_stack_size, 16 * 1024 * 1024);\n"
"\n"
"    oneapi::tbb::parallel_for( /* ... */ [] {\n"
"        // Create a big array in the stack\n"
"        char big_array[10*1024*1024];\n"
"    });\n"
"\n"
"    return 0;\n"
"}"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:142
msgid "Terminating oneTBB scheduler"
msgstr "Прекращение работы планировщика oneTBB"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:143
msgid ":ref:`task_scheduler_handle_reference` allows waiting for oneTBB worker threads completion:"
msgstr ":ref:`task_scheduler_handle_reference` позволяет ждать завершения рабочих потоков oneTBB:"

#: ../../oneTBB/doc/main/tbb_userguide/Migration_Guide/Task_Scheduler_Init.rst:146
msgid ""
"#include <oneapi/tbb/global_control.h>\n"
"#include <oneapi/tbb/parallel_for.h>\n"
"\n"
"int main() {\n"
"    oneapi::tbb::task_scheduler_handle handle{tbb::attach{}};\n"
"    // Do some parallel work here\n"
"    oneapi::tbb::parallel_for(/* ... */);\n"
"    oneapi::tbb::finalize(handle);\n"
"    return 0;\n"
"}"
msgstr ""
"#include <oneapi/tbb/global_control.h>\n"
"#include <oneapi/tbb/parallel_for.h>\n"
"\n"
"int main() {\n"
"    oneapi::tbb::task_scheduler_handle handle{tbb::attach{}};\n"
"    // Do some parallel work here\n"
"    oneapi::tbb::parallel_for(/* ... */);\n"
"    oneapi::tbb::finalize(handle);\n"
"    return 0;\n"
"}"
