# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Intel Corporation
# This file is distributed under the same license as the oneTBB package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: oneTBB \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-23 14:08+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:4
msgid "Flow Graph Basics: Reservation"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:7
msgid ""
"|full_name| flow graph ``join_node`` has four possible policies: "
"``queueing``, ``reserving``, ``key_matching`` and ``tag_matching``. "
"``join_nodes`` need messages at every input before they can create an "
"output message. The reserving ``join_node`` does not have internal "
"buffering, and it does not pull messages from its inputs until it has a "
"message at each input. To create an output message it temporarily "
"reserves a message at each input port, and only if all input ports "
"succeed reserving messages will an output message be created. If any "
"input port fails to reserve a message, no message will be pulled by the "
"``join_node``."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:19
msgid ""
"To support the reserving ``join_node`` some nodes support **reservation**"
" of their outputs. The way reservation works is:"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:23
msgid ""
"When a node connected to a reserving ``join_node`` in push state tries to"
" push a message, the ``join_node`` always rejects the push and the edge "
"connecting the nodes is switched to pull mode."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:26
msgid ""
"The reserving input port calls ``try_reserve`` on each edge in pull "
"state. This may fail; if so, the reserving input port switches that edge "
"to push state, and tries to reserve the next node connected by an edge in"
" pull state. While the input port's predecessor is in reserved state, no "
"other node can retrieve the reserved value."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:31
msgid ""
"If each input port successfully reserves an edge in pull state, the "
"reserving ``join_node`` will create a message using the reserved messages"
" and try to push the resulting message to any nodes connected to it."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:35
msgid ""
"If the message is successfully pushed to a successor, the predecessors "
"that were reserved are signaled that the messages were used (by calling "
"``try_consume()``.) Those messages will be discarded by the predecessor "
"nodes, because they have been successfully pushed."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:39
msgid ""
"If the message was not successfully pushed to any successor, the "
"predecessors that were reserved are signaled that the messages were not "
"used (by calling ``try_release()``.) At this point, the messages may be "
"pushed to or pulled by other nodes."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:45
msgid ""
"Because the reserving ``join_node`` will only attempt to push when each "
"input port has at least one edge in a pull state, and will only attempt "
"to create and push a message if all input ports succeed reserving "
"messages, at least one of the predecessors to each of the reserving "
"``join_node`` input ports must be reservable."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:52
msgid ""
"The following example demonstrates a reserving ``join_node``'s behavior. "
"``buffer_nodes`` buffer their output, so they accept a switch of their "
"output edge from push to pull mode. ``broadcast_nodes`` do not buffer "
"messages and do not support ``try_get()`` or ``try_reserve()``."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:61
#, python-format
msgid ""
"void run_example2() {  // example for Flow_Graph_Reservation.xml\n"
"    graph g;\n"
"    broadcast_node<int> bn(g);\n"
"    buffer_node<int> buf1(g);\n"
"    buffer_node<int> buf2(g);\n"
"    typedef join_node<tuple<int,int> reserving> join_type;\n"
"    join_type jn(g);\n"
"    buffer_node<join_type::output_type> buf_out(g);\n"
"    join_type::output_type tuple_out;\n"
"    int icnt;\n"
"\n"
"\n"
"    // join_node predecessors are both reservable buffer_nodes\n"
"    make_edge(buf1,input_port<0>jn));\n"
"    make_edge(bn,input_port<0>jn));      // attach a broadcast_node\n"
"    make_edge(buf2,input_port<1>jn));\n"
"    make_edge(jn, buf_out);\n"
"    bn.try_put(2);\n"
"    buf1.try_put(3);\n"
"    buf2.try_put(4);\n"
"    buf2.try_put(7);\n"
"    g.wait_for_all();\n"
"    while (buf_out.try_get(tuple_out)) {\n"
"        printf(\"join_node output == (%d,%d)\\n\",get<0>tuple_out), "
"get<1>tuple_out) );\n"
"    }\n"
"    if(buf1.try_get(icnt)) printf(\"buf1 had %d\\n\", icnt);\n"
"    else printf(\"buf1 was empty\\n\");\n"
"    if(buf2.try_get(icnt)) printf(\"buf2 had %d\\n\", icnt);\n"
"    else printf(\"buf2 was empty\\n\");\n"
"}"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:93
msgid ""
"In the example above, port 0 of the reserving ``join_node`` ``jn`` has "
"two predecessors: a ``buffer_node`` ``buf1`` and a ``broadcast_node`` "
"``bn``. Port 1 of the ``join_node`` has one predecessor, ``buffer_node`` "
"``buf2``."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:106
msgid "|image0|"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:265
msgid "image0"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:265
msgid ".. image:: main/tbb_userguide/Images/flow_graph_reserve_buffers_1.png"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:109
msgid ""
"We will discuss one possible execution sequence (the scheduling of tasks "
"may differ slightly, but the end result will be the same.)"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:116
msgid "bn.try_put(2);"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:119
msgid ""
"``bn`` attempts to forward 2 to ``jn``. ``jn`` does not accept the value "
"and the arc from ``bn`` to ``jn`` reverses. Because neither bn nor jn "
"buffer messages, the message is dropped. Because not all the inputs to "
"``jn`` have available predecessors, ``jn`` does nothing further."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:126
msgid ""
"Any node which does not support reservation will not work correctly when "
"attached to a reserving ``join_node``. This program demonstrates why this"
" occurs; connecting non-reserving nodes to nodes requiring support for "
"reservation is **not** recommended practice."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:139
msgid "|image1|"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:268
msgid "image1"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:268
msgid ".. image:: main/tbb_userguide/Images/flow_graph_reserve_buffers_2.png"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:145
msgid "buf1.try_put(3);"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:148
msgid ""
"``buf1`` attempts to forward 3 to ``jn``. ``jn`` does not accept the "
"value and the arc from ``buf1`` to ``jn`` reverses. Because not all the "
"inputs to ``jn`` have available predecessors, ``jn`` does nothing "
"further."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:161
msgid "|image2|"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:271
msgid "image2"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:271
msgid ".. image:: main/tbb_userguide/Images/flow_graph_reserve_buffers_3.png"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:167
msgid "buf2.try_put(4);"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:170
msgid ""
"``buf2`` attempts to forward 4 to ``jn``. ``jn`` does not accept the "
"value and the arc from ``buf2`` to ``jn`` reverses. Now both inputs of "
"``jn`` have predecessors, a task to build and forward a message from "
"``jn`` will be spawned. We assume that task is not yet executing."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:183
msgid "|image3|"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:274
msgid "image3"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:274
msgid ".. image:: main/tbb_userguide/Images/flow_graph_reserve_buffers_4.png"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:189
msgid "buf2.try_put(7);"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:192
msgid ""
"``buf2`` has no successor (because the arc to ``jn`` is reversed,) so it "
"stores the value 7."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:203
msgid "|image4|"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:277
msgid "image4"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:277
msgid ".. image:: main/tbb_userguide/Images/flow_graph_reserve_buffers_5.png"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:206
msgid "Now the task spawned to run ``jn`` runs."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:209
msgid ""
"``jn`` tries to reserve ``bn``, which fails. The arc to ``bn`` switches "
"back to the forward direction."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:211
msgid ""
"``jn`` tries to reserve ``buf1``, which succeeds (reserved nodes are "
"colored grey.) ``jn`` receives the value 3 from ``buf1``, but it remains "
"in ``buf1`` (in case the attempt to forward a message from ``jn`` fails.)"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:215
msgid ""
"``jn`` tries to reserve ``buf2``, which succeeds. ``jn`` receives the "
"value 4 from ``buf2``, but it remains in ``buf2``."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:217
msgid "``jn`` constructs the output message ``tuple<3,4>``."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:227
msgid "|image5|"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:280
msgid "image5"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:280
msgid ".. image:: main/tbb_userguide/Images/flow_graph_reserve_buffers_6.png"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:230
msgid ""
"Now ``jn`` pushes its message to ``buf_out``, which accepts it. Because "
"the push succeeded, ``jn`` signals ``buf1`` and ``buf2`` that the "
"reserved values were used, and the buffers discard those values. Now "
"``jn`` attempts to reserve again."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:236
msgid ""
"No attempt to pull from ``bn`` is made, because the edge from ``bn`` to "
"``jn`` is in push state."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:238
msgid ""
"``jn`` tries to reserve ``buf1``, which fails. The arc to ``buf1`` "
"switches back to the forward direction."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:240
msgid "``jn`` does not try any further actions."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:250
msgid "|image6|"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:283
msgid "image6"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:283
msgid ".. image:: main/tbb_userguide/Images/flow_graph_reserve_buffers_7.png"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:253
msgid ""
"No further activity occurs in the graph, and the ``wait_for_all()`` will "
"complete. The output of this code is"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Flow_Graph_Reservation.rst:260
msgid ""
"join_node output == (3,4)\n"
"buf1 was empty\n"
"buf2 had 7"
msgstr ""

