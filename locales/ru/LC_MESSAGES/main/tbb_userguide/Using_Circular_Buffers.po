# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Intel Corporation
# This file is distributed under the same license as the oneTBB package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: oneTBB\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-23 14:08+0300\n"
"PO-Revision-Date: 2022-02-25 22:34+0300\n"
"Last-Translator: Evgeny <schmidte@list.ru>\n"
"Language-Team: \n"
"Language: ru_RU\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : 2);\n"
"Generated-By: Babel 2.9.1\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../oneTBB/doc/main/tbb_userguide/Using_Circular_Buffers.rst:4
msgid "Using Circular Buffers"
msgstr "Использование кольцевых буферов"

#: ../../oneTBB/doc/main/tbb_userguide/Using_Circular_Buffers.rst:7
msgid "Circular buffers can sometimes be used to minimize the overhead of allocating and freeing the items passed between pipeline filters. If the first filter to create an item and last filter to consume an item are both ``serial_in_order``, the items can be allocated and freed via a circular buffer of size at least ``ntoken``, where ``ntoken`` is the first parameter to ``parallel_pipeline``. Under these conditions, no checking of whether an item is still in use is necessary."
msgstr "Кольцевые буферы иногда могут использоваться для минимизации накладных расходов на выделение и освобождение элементов, передаваемых между фильтрами конвейера. Если первый фильтр для создания элемента и последний фильтр для потребления элемента являются ``serial_in_order``, элементы могут быть выделены и освобождены через круговой буфер размером не менее ``ntoken``, где ``ntoken`` является первым параметром ``parallel_pipeline``. При таких условиях нет необходимости проверять, используется ли еще элемент."

#: ../../oneTBB/doc/main/tbb_userguide/Using_Circular_Buffers.rst:16
msgid "The reason this works is that at most ``ntoken`` items can be in flight, and items will be freed in the order that they were allocated. Hence by the time the circular buffer wraps around to reallocate an item, the item must have been freed from its previous use in the pipeline. If the first and last filter are *not* ``serial_in_order``, then you have to keep track of which buffers are currently in use, because buffers might not be retired in the same order they were allocated."
msgstr "Причина, по которой это работает, заключается в том, что в работе может находиться не более ``ntoken`` элементов, и элементы будут освобождаться в том порядке, в котором они были выделены. Следовательно, к тому моменту, когда круговой буфер обернется вокруг, чтобы перераспределить элемент, этот элемент должен быть освобожден от своего предыдущего использования в конвейере. Если первый и последний фильтр *не* ``serial_in_order``, то тебе придется следить за тем, какие буферы используются в данный момент, потому что буферы могут освобождаться не в том же порядке, в котором они были выделены."
