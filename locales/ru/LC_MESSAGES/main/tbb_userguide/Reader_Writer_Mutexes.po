# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Intel Corporation
# This file is distributed under the same license as the oneTBB package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: oneTBB \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-23 14:08+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../oneTBB/doc/main/tbb_userguide/Reader_Writer_Mutexes.rst:4
msgid "Reader Writer Mutexes"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Reader_Writer_Mutexes.rst:7
msgid ""
"Mutual exclusion is necessary when at least one thread *writes* to a "
"shared variable. But it does no harm to permit multiple readers into a "
"protected region. The reader-writer variants of the mutexes, denoted by "
"``_rw_`` in the class names, enable multiple readers by distinguishing "
"*reader locks* from *writer locks.* There can be more than one reader "
"lock on a given mutex."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Reader_Writer_Mutexes.rst:15
msgid ""
"Requests for a reader lock are distinguished from requests for a writer "
"lock via an extra boolean parameter in the constructor for "
"``scoped_lock``. The parameter is false to request a reader lock and true"
" to request a writer lock. It defaults to ``true`` so that when omitted, "
"a ``spin_rw_mutex`` or ``queuing_rw_mutex`` behaves like its non-``_rw_``"
" counterpart."
msgstr ""

