# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Intel Corporation
# This file is distributed under the same license as the oneTBB package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: oneTBB\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-23 14:08+0300\n"
"PO-Revision-Date: 2022-02-24 00:18+0300\n"
"Last-Translator: Evgeny <schmidte@list.ru>\n"
"Language-Team: \n"
"Language: ru_RU\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../oneTBB/doc/main/tbb_userguide/Non-Linear_Pipelines.rst:4
msgid "Non-Linear Pipelines"
msgstr "Нелинейные конвейеры"

#: ../../oneTBB/doc/main/tbb_userguide/Non-Linear_Pipelines.rst:7
msgid "Template function ``parallel_pipeline`` supports only linear pipelines. It does not directly handle more baroque plumbing, such as in the diagram below."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Non-Linear_Pipelines.rst:16
msgid "|image0|"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Non-Linear_Pipelines.rst:56
msgid "image0"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Non-Linear_Pipelines.rst:56
msgid ".. image:: main/tbb_userguide/Images/image011.jpg"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Non-Linear_Pipelines.rst:19
msgid "However, you can still use a pipeline for this. Just topologically sort the filters into a linear order, like this:"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Non-Linear_Pipelines.rst:23
msgid "The light gray arrows are the original arrows that are now implied by transitive closure of the other arrows. It might seem that lot of parallelism is lost by forcing a linear order on the filters, but in fact the only loss is in the *latency* of the pipeline, not the throughput. The latency is the time it takes a token to flow from the beginning to the end of the pipeline. Given a sufficient number of processors, the latency of the original non-linear pipeline is three filters. This is because filters A and B could process the token concurrently, and likewise filters D and E could process the token concurrently."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Non-Linear_Pipelines.rst:39
msgid "|image1|"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Non-Linear_Pipelines.rst:59
msgid "image1"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Non-Linear_Pipelines.rst:59
msgid ".. image:: main/tbb_userguide/Images/image012.jpg"
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Non-Linear_Pipelines.rst:42
msgid "In the linear pipeline, the latency is five filters. The behavior of filters A, B, D and E above may need to be modified in order to properly handle objects that don’t need to be acted upon by the filter other than to be passed along to the next filter in the pipeline."
msgstr ""

#: ../../oneTBB/doc/main/tbb_userguide/Non-Linear_Pipelines.rst:48
msgid "The throughput remains the same, because regardless of the topology, the throughput is still limited by the throughput of the slowest serial filter. If ``parallel_pipeline`` supported non-linear pipelines, it would add a lot of programming complexity, and not improve throughput. The linear limitation of ``parallel_pipeline`` is a good tradeoff of gain versus pain."
msgstr ""
