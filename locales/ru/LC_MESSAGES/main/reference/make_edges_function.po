# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Intel Corporation
# This file is distributed under the same license as the oneTBB package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: oneTBB \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-23 14:08+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../oneTBB/doc/main/reference/make_edges_function.rst:4
msgid "``make_edges`` function template"
msgstr ""

#: ../../oneTBB/doc/main/reference/make_edges_function.rst:7
msgid ""
"To enable this feature, define the ``TBB_PREVIEW_FLOW_GRAPH_FEATURES`` "
"macro to 1."
msgstr ""

#: ../../oneTBB/doc/main/reference/make_edges_function.rst:14
msgid "Description"
msgstr ""

#: ../../oneTBB/doc/main/reference/make_edges_function.rst:16
msgid ""
"The ``make_edges`` function template creates edges between a single node "
"and each node in a set of nodes."
msgstr ""

#: ../../oneTBB/doc/main/reference/make_edges_function.rst:19
msgid ""
"There are two ways to connect nodes in a set and a single node using "
"``make_edges``:"
msgstr ""

msgid ".. image:: main/reference/Resources/make_edges_usage.png"
msgstr ""

#: ../../oneTBB/doc/main/reference/make_edges_function.rst:26
msgid "API"
msgstr ""

#: ../../oneTBB/doc/main/reference/make_edges_function.rst:29
msgid "Header"
msgstr ""

#: ../../oneTBB/doc/main/reference/make_edges_function.rst:31
msgid "#include <oneapi/tbb/flow_graph.h>"
msgstr ""

#: ../../oneTBB/doc/main/reference/make_edges_function.rst:36
msgid "Syntax"
msgstr ""

#: ../../oneTBB/doc/main/reference/make_edges_function.rst:38
msgid ""
"// node_set is an exposition-only name for the type returned from "
"make_node_set function\n"
"\n"
"template <typename NodeType, typename Node, typename... Nodes>\n"
"void make_edges(node_set<Node, Nodes...>& set, NodeType& node);\n"
"\n"
"template <typename NodeType, typename Node, typename... Nodes>\n"
"void make_edges(NodeType& node, node_set<Node, Nodes...>& set);"
msgstr ""

#: ../../oneTBB/doc/main/reference/make_edges_function.rst:49
msgid "Example"
msgstr ""

#: ../../oneTBB/doc/main/reference/make_edges_function.rst:51
msgid "The example implements the graph structure in the picture below."
msgstr ""

msgid ".. image:: main/reference/Resources/make_edges_example.png"
msgstr ""

#: ../../oneTBB/doc/main/reference/make_edges_function.rst:56
msgid ""
"#define TBB_PREVIEW_FLOW_GRAPH_FEATURES 1\n"
"#include <oneapi/tbb/flow_graph.h>\n"
"\n"
"int main() {\n"
"    using namespace oneapi::tbb::flow;\n"
"\n"
"    graph g;\n"
"    broadcast_node<int> input(g);\n"
"\n"
"    function_node doubler(g, unlimited, [](const int& i) { return 2 * i; "
"});\n"
"    function_node squarer(g, unlimited, [](const int& i) { return i * i; "
"});\n"
"    function_node cuber(g, unlimited, [](const int& i) { return i * i * "
"i; });\n"
"\n"
"    buffer_node<int> buffer(g);\n"
"\n"
"    auto handlers = make_node_set(doubler, squarer, cuber);\n"
"    make_edges(input, handlers);\n"
"    make_edges(handlers, buffer);\n"
"\n"
"    for (int i = 1; i <= 10; ++i) {\n"
"        input.try_put(i);\n"
"    }\n"
"    g.wait_for_all();\n"
"}"
msgstr ""

